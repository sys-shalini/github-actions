name: Tag Dispatch with semver

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Target branch to push the tag'
        required: true
        type: choice
        options:
          - main
          - feature
      version_type:
        description: 'Type of version increment (major, minor, patch)'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  tag-dispatch:
    runs-on: ubuntu-latest
    permissions:
      contents: write 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.branch }}
        submodules: true
    
    - name: Set up Git
      run: |
        git config --global user.name 'sys-shalini'
        git config --global user.email 'shalini.s@sysfore.com'

    - name: Fetch tags
      run: git fetch --tags
    
    - name: Get Latest Tag
      id: get_latest_tag
      run: |
        latest_tag=$(git tag -l "main_*" | sort -V --reverse | head -n 1)
        echo "::set-output name=latest_tag::${latest_tag}"

    - name: Increment Tag
      id: increment_tag
      run: |
        latest_tag=${{ steps.get_latest_tag.outputs.latest_tag }}
        version_type=${{ github.event.inputs.version_type }}

        # Extract the prefix and version number
        prefix="main_"
        version="${latest_tag#main_}"
        version="${version#v}"  # Remove 'v' if it exists in the version part

        IFS='.' read -r -a version_parts <<< "$version"

        major=${version_parts[0]}
        minor=${version_parts[1]}
        patch=${version_parts[2]}

        case $version_type in
          major)
            major=$((major + 1))
            minor=0
            patch=0
            new_tag="${prefix}v${major}.${minor}.${patch}"
            ;;
          minor)
            minor=$((minor + 1))
            patch=0
            new_tag="${prefix}v${major}.${minor}.${patch}"
            ;;
          patch)
            patch=$((patch + 1))
            new_tag="${prefix}v${major}.${minor}.${patch}"
            ;;
        esac

        echo "Next tag: $new_tag"
        echo "::set-output name=next_tag::$new_tag"
        
    - name: Push new tag
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      run: |
        new_tag=${{ steps.increment_tag.outputs.next_tag }}
        git tag $new_tag
        git push origin $new_tag

    # - name: Create GitHub Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.PAT }}
    #   with:
    #       tag_name: ${{ steps.increment_tag.outputs.next_tag }}
    #       release_name: ${{ steps.increment_tag.outputs.next_tag }}
    #       body: 'Description of the release'
    #       draft: false
    #       prerelease: false
